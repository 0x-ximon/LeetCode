#+Title: Binary Search
#+Author: Simon Samuel
#+Date: <2025-10-02 Thu>

Binary Search operates on a contiguous sequence with a specified left and right index. This is called the Search Space. Binary Search maintains the left, right, and middle indices of the search space and compares the search target or applies the search condition to the middle value of the collection; if the condition is unsatisfied or values unequal, the half in which the target cannot lie is eliminated and the search continues on the remaining half until it is successful. If the search ends with an empty half, the condition cannot be fulfilled and target is not found.

* Template I
#+begin_src cpp
    int binarysearch(vector<int>& nums, int target){
      if(nums.size() == 0)
        return -1;

      int left = 0, right = nums.size() - 1;
      while(left <= right){
        // prevent (left + right) overflow
        int mid = left + (right - left) / 2;
        if(nums[mid] == target){ return mid; }
        else if(nums[mid] < target) { left = mid + 1; }
        else { right = mid - 1; }
      }

      // end condition: left > right
      return -1;
    }
#+end_src
